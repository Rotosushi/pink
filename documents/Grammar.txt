
top = function
    | bind

bind = ["var"] id ":=" affix ";"

function = "fn" id "(" [arg {"," arg}] ")" block

arg = id ":" type

block = "{" {term} "}"

term = conditional
     | while
     | bind
     | affix ";"


conditional = "if" "(" affix ")" block "else" block

while = "while" "(" affix ")" block

affix = composite "=" affix
      | composite

composite = builtin binop infix-parser
          | builtin

binop = "+"  |  "-"  |  "*"  | "/"
      | "&"  |  "|"  |  "!"  | "=="
      | "!=" |  "<"  |  "<=" | ">"
      | ">="

builtin = basic {"." basic | "[" basic "]" | "(" [affix {"," affix}] ")" }
         | basic

basic = id [":=" affix]
      | integer
      | unop builtin
      | "&" builtin
      | "*" builtin
      | "nil"
      | "true"
      | "false"
      | "(" affix {"," affix} ")"
      | "[" affix {"," affix} "]"

unop = "!" | "-"

type = "Nil"
     | "Integer"
     | "Boolean"
     | "(" type {"," type} ")"
     | "[" type ";" integer "]"
     | "*" type
     | "*[]" type
     | type "->" type

// these are the regular expressions used by re2c
id = [a-zA-Z_][a-zA-Z0-9_]*
integer = [0-9]+
