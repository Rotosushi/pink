/* Generated by re2c 3.0 on Wed Apr 12 16:33:26 2023 */
#line 1 "source/front/Lexer.re"
// Copyright (C) 2023 cadence
//
// This file is part of pink.
//
// pink is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// pink is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with pink.  If not, see <http://www.gnu.org/licenses/>.

#include <iterator> // std::distance

#include "front/Lexer.h"

namespace pink {
Lexer::Lexer()
    : location(1, 0, 1, 0) {
  end = cursor = marker = token = buffer.end();
}

Lexer::Lexer(std::string_view text)
    : location(1, 0, 1, 0),
      buffer(text) {
  end    = buffer.end();
  cursor = marker = token = buffer.begin();
}

void Lexer::SetBuffer(std::string_view text) {
  buffer = text;
  end    = buffer.end();
  cursor = marker = token = buffer.begin();
}

void Lexer::AppendToBuffer(std::string_view txt) {
  auto cursor_dist = std::distance(buffer.begin(), cursor);
  auto marker_dist = std::distance(buffer.begin(), marker);
  auto token_dist  = std::distance(buffer.begin(), token);

  buffer.append(txt);

  end    = buffer.end();
  cursor = buffer.begin() + cursor_dist;
  marker = buffer.begin() + marker_dist;
  token  = buffer.begin() + token_dist;
}

void Lexer::Reset() {
  location = {1, 0, 1, 0};
  buffer.clear();
  end = cursor = marker = token = buffer.end();
}

auto Lexer::EndOfInput() const -> bool { return (end - cursor) == 0; }

void Lexer::UpdateLocation() {
  auto length = cursor - token;

  location.firstLine   = location.lastLine;
  location.firstColumn = location.lastColumn;

  for (long i = 0; i < length; i++) {
    if (token[i] == '\n') {
      location.lastLine   += 1;
      location.lastColumn = location.firstColumn = 0;
    } else {
      location.lastColumn += 1;
    }
  }
}

/*
    token points to the beginning of the
    current token being lexed, and cursor points
    to the current position of the lexer,
    so the last token that was lexed is sitting
    between those two positions.

    Therefore we can use the string constructor
    taking a two iterators to construct the
    string from the characters from between that range.
*/
auto Lexer::txt() -> std::string_view { return {token, cursor}; }

auto Lexer::loc() -> Location { return location; }

/*
    These are the definitions of the parsing
    primitives that re2c uses, such that we
    can interoperate between c++ and re2c

    #TODO: i think this regex will allow for identifiers
            like: this-is-an-ident, follow-with-hyphen
            but parse identifierss like:
                    -unop-application-of-an-identifier,
                    binop-application-of-an-identifier- more-text

    hyphen-id = id ('-' id)+;

    #TODO and this regex will allow us to lex
    fully qualified identifiers when we want to
    add namespaces to the language.

    full-id = id ("::" id)+;
*/
#line 129 "source/front/Lexer.re"


// NOLINTBEGIN(cppcoreguidelines-avoid-goto)
// #REASON: re2c uses gotos to implement the lexer and as all of the
// gotos are from generated code we are trusting re2c to
// use gotos in a safe and sane way here.
auto Lexer::lex() -> Token {
  while (true) {
    token = cursor;

    
#line 127 "source/front/Lexer.cpp"
{
	char yych;
	yych = *cursor;
	switch (yych) {
		case '\t':
		case '\n':
		case ' ': goto yy2;
		case '!': goto yy4;
		case '%': goto yy6;
		case '&': goto yy7;
		case '(': goto yy8;
		case ')': goto yy9;
		case '*': goto yy10;
		case '+': goto yy11;
		case ',': goto yy12;
		case '-': goto yy13;
		case '.': goto yy14;
		case '/': goto yy15;
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy16;
		case ':': goto yy18;
		case ';': goto yy20;
		case '<': goto yy21;
		case '=': goto yy23;
		case '>': goto yy25;
		case 'A':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'O':
		case 'Q':
		case 'R':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'g':
		case 'h':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 'u':
		case 'x':
		case 'y':
		case 'z': goto yy27;
		case 'B': goto yy30;
		case 'I': goto yy31;
		case 'N': goto yy32;
		case 'P': goto yy33;
		case 'S': goto yy34;
		case '[': goto yy35;
		case ']': goto yy36;
		case 'd': goto yy37;
		case 'e': goto yy38;
		case 'f': goto yy39;
		case 'i': goto yy40;
		case 'n': goto yy41;
		case 't': goto yy42;
		case 'v': goto yy43;
		case 'w': goto yy44;
		case '{': goto yy45;
		case '|': goto yy46;
		case '}': goto yy47;
		default:
			if (end <= cursor) goto yy116;
			goto yy1;
	}
yy1:
	++cursor;
#line 189 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Error; }
#line 227 "source/front/Lexer.cpp"
yy2:
	yych = *++cursor;
	switch (yych) {
		case '\t':
		case '\n':
		case ' ': goto yy2;
		default: goto yy3;
	}
yy3:
#line 188 "source/front/Lexer.re"
	{ UpdateLocation(); continue; }
#line 239 "source/front/Lexer.cpp"
yy4:
	yych = *++cursor;
	switch (yych) {
		case '=': goto yy48;
		default: goto yy5;
	}
yy5:
#line 164 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Not; }
#line 249 "source/front/Lexer.cpp"
yy6:
	++cursor;
#line 161 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Modulo; }
#line 254 "source/front/Lexer.cpp"
yy7:
	++cursor;
#line 162 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::And; }
#line 259 "source/front/Lexer.cpp"
yy8:
	++cursor;
#line 178 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::LParen; }
#line 264 "source/front/Lexer.cpp"
yy9:
	++cursor;
#line 179 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::RParen; }
#line 269 "source/front/Lexer.cpp"
yy10:
	++cursor;
#line 159 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Star; }
#line 274 "source/front/Lexer.cpp"
yy11:
	++cursor;
#line 157 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Add; }
#line 279 "source/front/Lexer.cpp"
yy12:
	++cursor;
#line 173 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Comma; }
#line 284 "source/front/Lexer.cpp"
yy13:
	++cursor;
#line 158 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Sub; }
#line 289 "source/front/Lexer.cpp"
yy14:
	++cursor;
#line 172 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Dot; }
#line 294 "source/front/Lexer.cpp"
yy15:
	++cursor;
#line 160 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Divide; }
#line 299 "source/front/Lexer.cpp"
yy16:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy16;
		default: goto yy17;
	}
yy17:
#line 186 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Integer; }
#line 318 "source/front/Lexer.cpp"
yy18:
	yych = *++cursor;
	switch (yych) {
		case '=': goto yy49;
		default: goto yy19;
	}
yy19:
#line 175 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Colon; }
#line 328 "source/front/Lexer.cpp"
yy20:
	++cursor;
#line 174 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Semicolon;}
#line 333 "source/front/Lexer.cpp"
yy21:
	yych = *++cursor;
	switch (yych) {
		case '=': goto yy50;
		default: goto yy22;
	}
yy22:
#line 167 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::LessThan; }
#line 343 "source/front/Lexer.cpp"
yy23:
	yych = *++cursor;
	switch (yych) {
		case '=': goto yy51;
		default: goto yy24;
	}
yy24:
#line 176 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Assign; }
#line 353 "source/front/Lexer.cpp"
yy25:
	yych = *++cursor;
	switch (yych) {
		case '=': goto yy52;
		default: goto yy26;
	}
yy26:
#line 169 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::GreaterThan; }
#line 363 "source/front/Lexer.cpp"
yy27:
	yych = *++cursor;
yy28:
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy27;
		default: goto yy29;
	}
yy29:
#line 185 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Id; }
#line 436 "source/front/Lexer.cpp"
yy30:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'o': goto yy53;
		default: goto yy28;
	}
yy31:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'n': goto yy54;
		default: goto yy28;
	}
yy32:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'i': goto yy55;
		default: goto yy28;
	}
yy33:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'o': goto yy56;
		default: goto yy28;
	}
yy34:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'l': goto yy57;
		default: goto yy28;
	}
yy35:
	++cursor;
#line 182 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::LBracket; }
#line 476 "source/front/Lexer.cpp"
yy36:
	++cursor;
#line 183 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::RBracket; }
#line 481 "source/front/Lexer.cpp"
yy37:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'o': goto yy58;
		default: goto yy28;
	}
yy38:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'l': goto yy60;
		default: goto yy28;
	}
yy39:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'a': goto yy61;
		case 'n': goto yy62;
		default: goto yy28;
	}
yy40:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'f': goto yy64;
		default: goto yy28;
	}
yy41:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'i': goto yy66;
		default: goto yy28;
	}
yy42:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'h': goto yy67;
		case 'r': goto yy68;
		default: goto yy28;
	}
yy43:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'a': goto yy69;
		default: goto yy28;
	}
yy44:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'h': goto yy70;
		default: goto yy28;
	}
yy45:
	++cursor;
#line 180 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::LBrace; }
#line 544 "source/front/Lexer.cpp"
yy46:
	++cursor;
#line 163 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Or; }
#line 549 "source/front/Lexer.cpp"
yy47:
	++cursor;
#line 181 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::RBrace; }
#line 554 "source/front/Lexer.cpp"
yy48:
	++cursor;
#line 166 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::NotEquals; }
#line 559 "source/front/Lexer.cpp"
yy49:
	++cursor;
#line 177 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::ColonEq; }
#line 564 "source/front/Lexer.cpp"
yy50:
	++cursor;
#line 168 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::LessThanOrEqual; }
#line 569 "source/front/Lexer.cpp"
yy51:
	++cursor;
#line 165 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Equals; }
#line 574 "source/front/Lexer.cpp"
yy52:
	++cursor;
#line 170 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::GreaterThanOrEqual; }
#line 579 "source/front/Lexer.cpp"
yy53:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'o': goto yy71;
		default: goto yy28;
	}
yy54:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 't': goto yy72;
		default: goto yy28;
	}
yy55:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'l': goto yy73;
		default: goto yy28;
	}
yy56:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'i': goto yy75;
		default: goto yy28;
	}
yy57:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'i': goto yy76;
		default: goto yy28;
	}
yy58:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy27;
		default: goto yy59;
	}
yy59:
#line 155 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Do; }
#line 686 "source/front/Lexer.cpp"
yy60:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 's': goto yy77;
		default: goto yy28;
	}
yy61:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'l': goto yy78;
		default: goto yy28;
	}
yy62:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy27;
		default: goto yy63;
	}
yy63:
#line 149 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Fn; }
#line 772 "source/front/Lexer.cpp"
yy64:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy27;
		default: goto yy65;
	}
yy65:
#line 151 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::If; }
#line 844 "source/front/Lexer.cpp"
yy66:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'l': goto yy79;
		default: goto yy28;
	}
yy67:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'e': goto yy81;
		default: goto yy28;
	}
yy68:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'u': goto yy82;
		default: goto yy28;
	}
yy69:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'r': goto yy83;
		default: goto yy28;
	}
yy70:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'i': goto yy85;
		default: goto yy28;
	}
yy71:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'l': goto yy86;
		default: goto yy28;
	}
yy72:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'e': goto yy87;
		default: goto yy28;
	}
yy73:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy27;
		default: goto yy74;
	}
yy74:
#line 141 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::NilType; }
#line 965 "source/front/Lexer.cpp"
yy75:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'n': goto yy88;
		default: goto yy28;
	}
yy76:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'c': goto yy89;
		default: goto yy28;
	}
yy77:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'e': goto yy90;
		default: goto yy28;
	}
yy78:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 's': goto yy92;
		default: goto yy28;
	}
yy79:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy27;
		default: goto yy80;
	}
yy80:
#line 140 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Nil; }
#line 1065 "source/front/Lexer.cpp"
yy81:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'n': goto yy93;
		default: goto yy28;
	}
yy82:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'e': goto yy95;
		default: goto yy28;
	}
yy83:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy27;
		default: goto yy84;
	}
yy84:
#line 150 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Var; }
#line 1151 "source/front/Lexer.cpp"
yy85:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'l': goto yy97;
		default: goto yy28;
	}
yy86:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'e': goto yy98;
		default: goto yy28;
	}
yy87:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'g': goto yy99;
		default: goto yy28;
	}
yy88:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 't': goto yy100;
		default: goto yy28;
	}
yy89:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'e': goto yy101;
		default: goto yy28;
	}
yy90:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy27;
		default: goto yy91;
	}
yy91:
#line 153 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Else; }
#line 1258 "source/front/Lexer.cpp"
yy92:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'e': goto yy103;
		default: goto yy28;
	}
yy93:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy27;
		default: goto yy94;
	}
yy94:
#line 152 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Then; }
#line 1337 "source/front/Lexer.cpp"
yy95:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy27;
		default: goto yy96;
	}
yy96:
#line 143 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::True; }
#line 1409 "source/front/Lexer.cpp"
yy97:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'e': goto yy105;
		default: goto yy28;
	}
yy98:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'a': goto yy107;
		default: goto yy28;
	}
yy99:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'e': goto yy108;
		default: goto yy28;
	}
yy100:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'e': goto yy109;
		default: goto yy28;
	}
yy101:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy27;
		default: goto yy102;
	}
yy102:
#line 147 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Slice; }
#line 1509 "source/front/Lexer.cpp"
yy103:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy27;
		default: goto yy104;
	}
yy104:
#line 144 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::False; }
#line 1581 "source/front/Lexer.cpp"
yy105:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy27;
		default: goto yy106;
	}
yy106:
#line 154 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::While; }
#line 1653 "source/front/Lexer.cpp"
yy107:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'n': goto yy110;
		default: goto yy28;
	}
yy108:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'r': goto yy112;
		default: goto yy28;
	}
yy109:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy29;
		case 'r': goto yy114;
		default: goto yy28;
	}
yy110:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy27;
		default: goto yy111;
	}
yy111:
#line 145 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::BooleanType; }
#line 1746 "source/front/Lexer.cpp"
yy112:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy27;
		default: goto yy113;
	}
yy113:
#line 142 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::IntegerType; }
#line 1818 "source/front/Lexer.cpp"
yy114:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy27;
		default: goto yy115;
	}
yy115:
#line 146 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Pointer; }
#line 1890 "source/front/Lexer.cpp"
yy116:
#line 190 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::End; }
#line 1894 "source/front/Lexer.cpp"
}
#line 191 "source/front/Lexer.re"

  }
}
// NOLINTEND(cppcoreguidelines-avoid-goto)
} // namespace pink
