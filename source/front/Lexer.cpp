/* Generated by re2c 3.0 on Wed Apr 12 12:41:26 2023 */
#line 1 "source/front/Lexer.re"
// Copyright (C) 2023 cadence
//
// This file is part of pink.
//
// pink is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// pink is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with pink.  If not, see <http://www.gnu.org/licenses/>.

#include <iterator> // std::distance

#include "front/Lexer.h"

namespace pink {
Lexer::Lexer()
    : location(1, 0, 1, 0) {
  end = cursor = marker = token = buffer.end();
}

Lexer::Lexer(std::string_view text)
    : location(1, 0, 1, 0),
      buffer(text) {
  end    = buffer.end();
  cursor = marker = token = buffer.begin();
}

void Lexer::SetBuffer(std::string_view text) {
  buffer = text;
  end    = buffer.end();
  cursor = marker = token = buffer.begin();
}

void Lexer::AppendToBuffer(std::string_view txt) {
  auto cursor_dist = std::distance(buffer.begin(), cursor);
  auto marker_dist = std::distance(buffer.begin(), marker);
  auto token_dist  = std::distance(buffer.begin(), token);

  buffer.append(txt);

  end    = buffer.end();
  cursor = buffer.begin() + cursor_dist;
  marker = buffer.begin() + marker_dist;
  token  = buffer.begin() + token_dist;
}

void Lexer::Reset() {
  location = {1, 0, 1, 0};
  buffer.clear();
  end = cursor = marker = token = buffer.end();
}

auto Lexer::EndOfInput() const -> bool { return (end - cursor) == 0; }

void Lexer::UpdateLocation() {
  auto length = cursor - token;

  location.firstLine   = location.lastLine;
  location.firstColumn = location.lastColumn;

  for (long i = 0; i < length; i++) {
    if (token[i] == '\n') {
      location.lastLine   += 1;
      location.lastColumn = location.firstColumn = 0;
    } else {
      location.lastColumn += 1;
    }
  }
}

/*
    token points to the beginning of the
    current token being lexed, and cursor points
    to the current position of the lexer,
    so the last token that was lexed is sitting
    between those two positions.

    Therefore we can use the string constructor
    taking a two iterators to construct the
    string from the characters from between that range.
*/
auto Lexer::txt() -> std::string_view { return {token, cursor}; }

auto Lexer::loc() -> Location { return location; }

/*
    These are the definitions of the parsing
    primitives that re2c uses, such that we
    can interoperate between c++ and re2c

    #TODO: i think this regex will allow for identifiers
            like: this-is-an-ident, follow-with-hyphen
            but parse identifierss like:
                    -unop-application-of-an-identifier,
                    binop-application-of-an-identifier- more-text

    hyphen-id = id ('-' id)+;

    #TODO and this regex will allow us to lex
    fully qualified identifiers when we want to
    add namespaces to the language.

    full-id = id ("::" id)+;
*/
#line 129 "source/front/Lexer.re"


// NOLINTBEGIN(cppcoreguidelines-avoid-goto)
// #REASON: re2c uses gotos to implement the lexer and as all of the
// gotos are from generated code we are trusting re2c to
// use gotos in a safe and sane way here.
auto Lexer::lex() -> Token {
  while (true) {
    token = cursor;

    
#line 127 "source/front/Lexer.cpp"
{
	char yych;
	yych = *cursor;
	switch (yych) {
		case '\t':
		case '\n':
		case ' ': goto yy2;
		case '!': goto yy4;
		case '&': goto yy6;
		case '(': goto yy7;
		case ')': goto yy8;
		case '*': goto yy9;
		case '+': goto yy10;
		case ',': goto yy11;
		case '-': goto yy12;
		case '.': goto yy13;
		case '/': goto yy14;
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy15;
		case ':': goto yy17;
		case ';': goto yy19;
		case '<': goto yy20;
		case '=': goto yy22;
		case '>': goto yy24;
		case 'A':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'O':
		case 'Q':
		case 'R':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'g':
		case 'h':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 'u':
		case 'x':
		case 'y':
		case 'z': goto yy26;
		case 'B': goto yy29;
		case 'I': goto yy30;
		case 'N': goto yy31;
		case 'P': goto yy32;
		case 'S': goto yy33;
		case '[': goto yy34;
		case ']': goto yy35;
		case 'd': goto yy36;
		case 'e': goto yy37;
		case 'f': goto yy38;
		case 'i': goto yy39;
		case 'n': goto yy40;
		case 't': goto yy41;
		case 'v': goto yy42;
		case 'w': goto yy43;
		case '{': goto yy44;
		case '|': goto yy45;
		case '}': goto yy46;
		default:
			if (end <= cursor) goto yy115;
			goto yy1;
	}
yy1:
	++cursor;
#line 188 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Error; }
#line 226 "source/front/Lexer.cpp"
yy2:
	yych = *++cursor;
	switch (yych) {
		case '\t':
		case '\n':
		case ' ': goto yy2;
		default: goto yy3;
	}
yy3:
#line 187 "source/front/Lexer.re"
	{ UpdateLocation(); continue; }
#line 238 "source/front/Lexer.cpp"
yy4:
	yych = *++cursor;
	switch (yych) {
		case '=': goto yy47;
		default: goto yy5;
	}
yy5:
#line 163 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Not; }
#line 248 "source/front/Lexer.cpp"
yy6:
	++cursor;
#line 161 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::And; }
#line 253 "source/front/Lexer.cpp"
yy7:
	++cursor;
#line 177 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::LParen; }
#line 258 "source/front/Lexer.cpp"
yy8:
	++cursor;
#line 178 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::RParen; }
#line 263 "source/front/Lexer.cpp"
yy9:
	++cursor;
#line 159 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Star; }
#line 268 "source/front/Lexer.cpp"
yy10:
	++cursor;
#line 157 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Add; }
#line 273 "source/front/Lexer.cpp"
yy11:
	++cursor;
#line 172 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Comma; }
#line 278 "source/front/Lexer.cpp"
yy12:
	++cursor;
#line 158 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Sub; }
#line 283 "source/front/Lexer.cpp"
yy13:
	++cursor;
#line 171 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Dot; }
#line 288 "source/front/Lexer.cpp"
yy14:
	++cursor;
#line 160 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Divide; }
#line 293 "source/front/Lexer.cpp"
yy15:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy15;
		default: goto yy16;
	}
yy16:
#line 185 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Integer; }
#line 312 "source/front/Lexer.cpp"
yy17:
	yych = *++cursor;
	switch (yych) {
		case '=': goto yy48;
		default: goto yy18;
	}
yy18:
#line 174 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Colon; }
#line 322 "source/front/Lexer.cpp"
yy19:
	++cursor;
#line 173 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Semicolon;}
#line 327 "source/front/Lexer.cpp"
yy20:
	yych = *++cursor;
	switch (yych) {
		case '=': goto yy49;
		default: goto yy21;
	}
yy21:
#line 166 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::LessThan; }
#line 337 "source/front/Lexer.cpp"
yy22:
	yych = *++cursor;
	switch (yych) {
		case '=': goto yy50;
		default: goto yy23;
	}
yy23:
#line 175 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Assign; }
#line 347 "source/front/Lexer.cpp"
yy24:
	yych = *++cursor;
	switch (yych) {
		case '=': goto yy51;
		default: goto yy25;
	}
yy25:
#line 168 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::GreaterThan; }
#line 357 "source/front/Lexer.cpp"
yy26:
	yych = *++cursor;
yy27:
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy26;
		default: goto yy28;
	}
yy28:
#line 184 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Id; }
#line 430 "source/front/Lexer.cpp"
yy29:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'o': goto yy52;
		default: goto yy27;
	}
yy30:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'n': goto yy53;
		default: goto yy27;
	}
yy31:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'i': goto yy54;
		default: goto yy27;
	}
yy32:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'o': goto yy55;
		default: goto yy27;
	}
yy33:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'l': goto yy56;
		default: goto yy27;
	}
yy34:
	++cursor;
#line 181 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::LBracket; }
#line 470 "source/front/Lexer.cpp"
yy35:
	++cursor;
#line 182 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::RBracket; }
#line 475 "source/front/Lexer.cpp"
yy36:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'o': goto yy57;
		default: goto yy27;
	}
yy37:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'l': goto yy59;
		default: goto yy27;
	}
yy38:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'a': goto yy60;
		case 'n': goto yy61;
		default: goto yy27;
	}
yy39:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'f': goto yy63;
		default: goto yy27;
	}
yy40:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'i': goto yy65;
		default: goto yy27;
	}
yy41:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'h': goto yy66;
		case 'r': goto yy67;
		default: goto yy27;
	}
yy42:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'a': goto yy68;
		default: goto yy27;
	}
yy43:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'h': goto yy69;
		default: goto yy27;
	}
yy44:
	++cursor;
#line 179 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::LBrace; }
#line 538 "source/front/Lexer.cpp"
yy45:
	++cursor;
#line 162 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Or; }
#line 543 "source/front/Lexer.cpp"
yy46:
	++cursor;
#line 180 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::RBrace; }
#line 548 "source/front/Lexer.cpp"
yy47:
	++cursor;
#line 165 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::NotEquals; }
#line 553 "source/front/Lexer.cpp"
yy48:
	++cursor;
#line 176 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::ColonEq; }
#line 558 "source/front/Lexer.cpp"
yy49:
	++cursor;
#line 167 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::LessThanOrEqual; }
#line 563 "source/front/Lexer.cpp"
yy50:
	++cursor;
#line 164 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Equals; }
#line 568 "source/front/Lexer.cpp"
yy51:
	++cursor;
#line 169 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::GreaterThanOrEqual; }
#line 573 "source/front/Lexer.cpp"
yy52:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'o': goto yy70;
		default: goto yy27;
	}
yy53:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 't': goto yy71;
		default: goto yy27;
	}
yy54:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'l': goto yy72;
		default: goto yy27;
	}
yy55:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'i': goto yy74;
		default: goto yy27;
	}
yy56:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'i': goto yy75;
		default: goto yy27;
	}
yy57:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy26;
		default: goto yy58;
	}
yy58:
#line 155 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Do; }
#line 680 "source/front/Lexer.cpp"
yy59:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 's': goto yy76;
		default: goto yy27;
	}
yy60:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'l': goto yy77;
		default: goto yy27;
	}
yy61:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy26;
		default: goto yy62;
	}
yy62:
#line 149 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Fn; }
#line 766 "source/front/Lexer.cpp"
yy63:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy26;
		default: goto yy64;
	}
yy64:
#line 151 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::If; }
#line 838 "source/front/Lexer.cpp"
yy65:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'l': goto yy78;
		default: goto yy27;
	}
yy66:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'e': goto yy80;
		default: goto yy27;
	}
yy67:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'u': goto yy81;
		default: goto yy27;
	}
yy68:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'r': goto yy82;
		default: goto yy27;
	}
yy69:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'i': goto yy84;
		default: goto yy27;
	}
yy70:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'l': goto yy85;
		default: goto yy27;
	}
yy71:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'e': goto yy86;
		default: goto yy27;
	}
yy72:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy26;
		default: goto yy73;
	}
yy73:
#line 141 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::NilType; }
#line 959 "source/front/Lexer.cpp"
yy74:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'n': goto yy87;
		default: goto yy27;
	}
yy75:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'c': goto yy88;
		default: goto yy27;
	}
yy76:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'e': goto yy89;
		default: goto yy27;
	}
yy77:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 's': goto yy91;
		default: goto yy27;
	}
yy78:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy26;
		default: goto yy79;
	}
yy79:
#line 140 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Nil; }
#line 1059 "source/front/Lexer.cpp"
yy80:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'n': goto yy92;
		default: goto yy27;
	}
yy81:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'e': goto yy94;
		default: goto yy27;
	}
yy82:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy26;
		default: goto yy83;
	}
yy83:
#line 150 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Var; }
#line 1145 "source/front/Lexer.cpp"
yy84:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'l': goto yy96;
		default: goto yy27;
	}
yy85:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'e': goto yy97;
		default: goto yy27;
	}
yy86:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'g': goto yy98;
		default: goto yy27;
	}
yy87:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 't': goto yy99;
		default: goto yy27;
	}
yy88:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'e': goto yy100;
		default: goto yy27;
	}
yy89:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy26;
		default: goto yy90;
	}
yy90:
#line 153 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Else; }
#line 1252 "source/front/Lexer.cpp"
yy91:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'e': goto yy102;
		default: goto yy27;
	}
yy92:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy26;
		default: goto yy93;
	}
yy93:
#line 152 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Then; }
#line 1331 "source/front/Lexer.cpp"
yy94:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy26;
		default: goto yy95;
	}
yy95:
#line 143 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::True; }
#line 1403 "source/front/Lexer.cpp"
yy96:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'e': goto yy104;
		default: goto yy27;
	}
yy97:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'a': goto yy106;
		default: goto yy27;
	}
yy98:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'e': goto yy107;
		default: goto yy27;
	}
yy99:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'e': goto yy108;
		default: goto yy27;
	}
yy100:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy26;
		default: goto yy101;
	}
yy101:
#line 147 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Slice; }
#line 1503 "source/front/Lexer.cpp"
yy102:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy26;
		default: goto yy103;
	}
yy103:
#line 144 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::False; }
#line 1575 "source/front/Lexer.cpp"
yy104:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy26;
		default: goto yy105;
	}
yy105:
#line 154 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::While; }
#line 1647 "source/front/Lexer.cpp"
yy106:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'n': goto yy109;
		default: goto yy27;
	}
yy107:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'r': goto yy111;
		default: goto yy27;
	}
yy108:
	yych = *++cursor;
	switch (yych) {
		case 0x00: goto yy28;
		case 'r': goto yy113;
		default: goto yy27;
	}
yy109:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy26;
		default: goto yy110;
	}
yy110:
#line 145 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::BooleanType; }
#line 1740 "source/front/Lexer.cpp"
yy111:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy26;
		default: goto yy112;
	}
yy112:
#line 142 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::IntegerType; }
#line 1812 "source/front/Lexer.cpp"
yy113:
	yych = *++cursor;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy26;
		default: goto yy114;
	}
yy114:
#line 146 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::Pointer; }
#line 1884 "source/front/Lexer.cpp"
yy115:
#line 189 "source/front/Lexer.re"
	{ UpdateLocation(); return Token::End; }
#line 1888 "source/front/Lexer.cpp"
}
#line 190 "source/front/Lexer.re"

  }
}
// NOLINTEND(cppcoreguidelines-avoid-goto)
} // namespace pink
