a polymorphic type on the lhs of an application is okay,
a polymorphic type on the rhs of an application is a polymorphic definition,
a monotonic type on the rhs and a polymorphic type on the lhs means we want 
to ask the polymorphic type if it can be instanced with this monotonic type,
which brings the problem to, how to we connect the polymorphic type (a single thing)
to each correct polymorphic procedure which needs to be asked the question.

my first instinct is to hold a PolyLambda* within the structure representing 
Poly Type Literals, (like how we have a location association for literals, even 
though we intern the exact representation) this means assigning this pointer at 
the time at which we generate the polymorphic type judgement from the polymorphic 
lambda. (because only terms with no type annotation are declared to be polymorphic
we can say that a polymorphic judgement means that a polylambda object generated that 
type. either we saw the polylambda object immediately, or it was bound to a name in 
the environment. but that is the only location we will observe the polymorphic type.
so when we encounter the polymorphic object and can say, "oh, this term has polymorphic 
type" we are also in a position to hold the address of the object which generated the 
polymorphic type, and pass that in to a procedure which knows how to ask that object if 
it can be instanced with the type we also observed.
